# /etc/redis.conf

# 参考

* https://gist.github.com/south37/d4a5a8158f49e067237c17d13ecab12a#file-04_nginx-md

### 必ずやること
- [ ] config ファイルの `bind ~` はコメントアウト（localhost以外からも繋げるようにするため)

### unix socket

unix socket で redis.conf 使う場合

```
# Specify the path for the Unix socket that will be used to listen for
# incoming connections. There is no default, so Redis will not listen
# on a unix socket when not specified.
#
# unixsocket /tmp/redis.sock
# unixsocketperm 700
```

privatetmp の仕組みで /tmp 以下のパスだと動かない。 http://www.kunitake.org/chalow/cat_systemd.html

`sudo vim /etc/systemd/system/redis.service`
```
PrivateTmp=yes
```

### slow log

```
#slowlog-log-slower-than 10000
#slowlog-max-len 128
#latency-monitor-threshold 0
```

### 高速化のためにするべき設定

<strike>DBスナップショットのディスク保存を止める</strike> 再起動後にデータが保持されていないといけないので、これはやってはいけない。

```
################################ SNAPSHOTTING  ################################
#
# Save the DB on disk:
#
#   save <seconds> <changes>
#
#   Will save the DB if both the given number of seconds and the given
#   number of write operations against the DB occurred.
#
#   In the example below the behaviour will be to save:
#   after 900 sec (15 min) if at least 1 key changed
#   after 300 sec (5 min) if at least 10 keys changed
#   after 60 sec if at least 10000 keys changed
#
#   Note: you can disable saving completely by commenting out all "save" lines.
#
#   It is also possible to remove all the previously configured save
#   points by adding a save directive with a single empty string argument
#   like in the following example:
#
#   save ""

save 900 1
save 300 10
save 60 10000
```

RDBのチェックサム計算を止める

```
# Since version 5 of RDB a CRC64 checksum is placed at the end of the file.
# This makes the format more resistant to corruption but there is a performance
# hit to pay (around 10%) when saving and loading RDB files, so you can disable it
# for maximum performances.
#
# RDB files created with checksum disabled have a checksum of zero that will
# tell the loading code to skip the check.
rdbchecksum yes
```

### その他

```
tcp-backlog 511
timeout 0
tcp-keepalive 0
loglevel notice

stop-writes-on-bgsave-error yes

rdbcompression no
rdbchecksum yes
dbfilename dump.rdb

dir /home/isucon/redis


maxmemory 4g
maxmemory-policy noeviction
```

### hiredis

https://github.com/redis/redis-rb

hiredis ドライバを使うと c ext gem が使えるので早くなる。

```
gem "redis", "~> 3.0.1"
gem "hiredis", "~> 0.4.5"
```

### 参考

- 公式ドキュメントtop http://redis.io/documentation
- [An introduction to Redis data types and abstractions](http://redis.io/topics/data-types-intro)
- [Request/Response protocols and RTT](http://redis.io/topics/pipelining) pipelining を使って round trip を減らす
- [Redis configuration](http://redis.io/topics/config)
    - https://raw.githubusercontent.com/antirez/redis/3.2/redis.conf
- [Redis Administration](http://redis.io/topics/admin)
    - sysctl.conf の設定など
- https://github.com/shirokanezoo/isucon4-qualifier-sorah/blob/master/redis.conf
- [Redis latency problems troubleshooting](http://redis.io/topics/latency)
- [redisデータバックアップ](https://qiita.com/kkam0907/items/9a384fa260fdc5b4b047)