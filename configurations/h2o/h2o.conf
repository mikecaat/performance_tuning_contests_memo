
# /etc/h2o/h2o.conf

## 参考

* https://github.com/karupanerura/isucon6-qualifier/blob/master/config/h2o.conf

* https://github.com/matsuu/kataribe

* h2oの設定構造
  * global, host, path, extensionの4段階の構成
  * https://h2o.examp1e.net/configure/syntax_and_structure.html

## 複数台構成への変更方法

* ロードバランシング機能は/etc/hostsを利用して設定
  * 2.3になると、正式にh2oの機能として実装される予定
  * 異なるポートへのルーティング、ルーティング重み変更、unixドメイン利用との併用はできないと思われる（未調査）

``` h2o.conf
hosts:
 # 自サーバの80番ポートへのアクセスをロードバランス
  "192.100.0.1:80":
   listen:
      port: 80
   paths:
      "/":
        proxy.reverse.url: "http://app:5000"
```

``` /etc/host.conf
# /etc/hosts同一IPアドレスが複数設定されていた場合にすべて返す
multi on
```

``` /etc/hosts
# appのIPアドレスでロードバランス先を設定
192.100.0.1 app
192.100.0.2 app
192.100.0.3 app
```

## 静的ファイルの配信設定

* file.dir(file.file)ディレクティブに記載する
  * ただ、proxy.reverse.urlとの併用方法は分からず
  * TODO: file.dirの下に記載すれば、静的ファイルがなければ、自動的にルーティングされる?
  * もしくはmrubyでの設定が必要

``` h2o.conf
hosts:
  "192.100.0.1:80":
    listen:
      port: 80
    paths:
      "/":
        # 静的ファイルを配信するパスを指定。静的ファイルがなければproxyされる
        file.dir: /home/isucon/webapp/public/
        ...
```

## 設定ファイル例

```
listen:
  port: 80

http2-casper: ON
http2-reprioritize-blocking-assets: ON
compress: ON

ssl-session-resumption:
  mode: all

user: isuconaccess-log:

# kataribe用の設定
access-log:
  path: /var/log/h2o/access.log
  format: "%h %l %u %t \"%r\" %s %b \"%{Referer}i\" \"%{User-agent}i\" %{duration}x"
error-log: /var/log/h2o/error.log
pid-file: /var/run/h2o/h2o.pid

tcp-fastopen: 8192

header.set: "X-Content-Type-Options: nosniff"
header.set: "X-Frame-Options: DENY"
header.set: "Cache-Control: private"

hosts:
  "localhost":
    paths:
      /server-status:
        mruby.handler: |
          lambda {|env|
            if env["REMOTE_ADDR"] == "127.0.0.1" || env["REMOTE_ADDR"] == "::1"
              return [399, {}, []]
            end
            [403, {"Content-Type" => "text/plain"}, ["Forbidden"]]
          }
        status: ON
  "isucon.example.com":
    listen:
      port: 443
      ssl:
        certificate-file: /path/to/fullchain.pem
        key-file: /path/to/privkey.pem
    paths:
      /css:
        file.dir:             /home/isucon/isucon/static/css
        file.etag:            ON
        file.send-compressed: ON
        expires:              1 day
     /js:
        file.dir:             /home/isucon/isucon/static/js
        file.etag:            ON
        file.send-compressed: ON
        expires:              1 day
     /:
        proxy.reverse.url: "http://127.0.0.1:8080/"
        proxy.preserve-host: ON
        proxy.preserve-x-forwarded-proto: ON
        # proxy.emit-x-forwarded-headers: ON
        # proxy.websocket: ON
    header.set: "Strict-Transport-Security: max-age=86400; preload"
    access-log: /dev/stdout
```
